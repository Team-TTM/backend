const adherantService = require('../services/adherantService');

const getAllAdherents = async (req, res) => {
    try {
        console.log('üìå [CONTROLLER] R√©cup√©ration des adh√©rents...');

        const adherents = await adherantService.getAllAdherents();

        if (adherents.length === 0) {
            console.log('‚ö†Ô∏è Aucun adh√©rent trouv√©.');
            return res.status(204).send(); // 204 : Pas de contenu
        }

        console.log(`‚úÖ ${adherents.length} adh√©rents r√©cup√©r√©s avec succ√®s.`);
        return res.status(200).json(adherents);
    } catch (error) {
        console.error('‚ùå [CONTROLLER] Erreur lors de la r√©cup√©ration des adh√©rents:', error);
        return res.status(404).json({
            error: error.message
        });
    }
};

const getAdherent= async (req,res) => {

    const {userId} = req.auth;

    try {
        console.log(`üìå [CONTROLLER] R√©cup√©ration de l'${userId} : ...`);
        console.log(userId);

        const adherents = await adherantService.getAdherent(userId);

        if (adherents.length === 0) {
            console.log('‚ö†Ô∏è Aucun adh√©rent trouv√©.');
            return res.status(204).send(); // 204 : Pas de contenu
        }

        console.log(`‚úÖ ${adherents.length} adh√©rents r√©cup√©r√©s avec succ√®s.`);
        return res.status(200).json(adherents);
    } catch (error) {
        console.error('‚ùå [CONTROLLER] Erreur lors de la r√©cup√©ration des adh√©rents:', error);
        return res.status(404).json({
            error: error.message
        });
    }
};

const updateAdherent = async (req, res) => {
    const { userId } = req.auth; // R√©cup√®re l'ID utilisateur authentifi√©

    try {
        console.log(`üìå [CONTROLLER] Mise √† jour de l'adh√©rent ${userId} : ...`);
        console.log(userId);

        const adherent = req.body;

        if (!adherent || !adherent.numeroLicence || !adherent.getDerniereSaison()) {
            console.log('‚ö†Ô∏è Les informations de l\'adh√©rent sont incompl√®tes.');
            return res.status(400).json({
                error: 'Les informations de l\'adh√©rent sont incompl√®tes.'
            });
        }

        const isAdherentUpdated = await adherantService.updateAdherent(adherent);

        if (!isAdherentUpdated) {
            console.log('‚ö†Ô∏è La mise √† jour n\'a pas √©t√© effectu√©e.');
            return res.status(204).send(); // Pas de contenu
        }

        console.log('‚úÖ Adh√©rent mis √† jour avec succ√®s.');
        return res.status(200).json({ message: 'Adh√©rent mis √† jour avec succ√®s.' });

    } catch (error) {
        console.error('‚ùå [CONTROLLER] Erreur lors de la mise √† jour de l\'adh√©rent:', error);
        return res.status(500).json({
            error: error.message || 'Une erreur est survenue lors de la mise √† jour de l\'adh√©rent.'
        });
    }
};


module.exports = { getAllAdherents,getAdherent,updateAdherent };